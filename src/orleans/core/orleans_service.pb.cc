// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orleans_service.proto

#include "orleans_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace orleans {
namespace core {
class OrleansRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrleansRequest>
      _instance;
} _OrleansRequest_default_instance_;
class OrleansResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrleansResponse>
      _instance;
} _OrleansResponse_default_instance_;
class OrleansReleaseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrleansReleaseRequest>
      _instance;
} _OrleansReleaseRequest_default_instance_;
class OrleansReleaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrleansReleaseResponse>
      _instance;
} _OrleansReleaseResponse_default_instance_;
}  // namespace core
}  // namespace orleans
namespace protobuf_orleans_5fservice_2eproto {
void InitDefaultsOrleansRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gayrpc_2fcore_2fgayrpc_5fmeta_2eproto::InitDefaultsRpcMeta();
  {
    void* ptr = &::orleans::core::_OrleansRequest_default_instance_;
    new (ptr) ::orleans::core::OrleansRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orleans::core::OrleansRequest::InitAsDefaultInstance();
}

void InitDefaultsOrleansRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrleansRequestImpl);
}

void InitDefaultsOrleansResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_gayrpc_2fcore_2fgayrpc_5fmeta_2eproto::InitDefaultsRpcMeta();
  {
    void* ptr = &::orleans::core::_OrleansResponse_default_instance_;
    new (ptr) ::orleans::core::OrleansResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orleans::core::OrleansResponse::InitAsDefaultInstance();
}

void InitDefaultsOrleansResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrleansResponseImpl);
}

void InitDefaultsOrleansReleaseRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::orleans::core::_OrleansReleaseRequest_default_instance_;
    new (ptr) ::orleans::core::OrleansReleaseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orleans::core::OrleansReleaseRequest::InitAsDefaultInstance();
}

void InitDefaultsOrleansReleaseRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrleansReleaseRequestImpl);
}

void InitDefaultsOrleansReleaseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::orleans::core::_OrleansReleaseResponse_default_instance_;
    new (ptr) ::orleans::core::OrleansReleaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::orleans::core::OrleansReleaseResponse::InitAsDefaultInstance();
}

void InitDefaultsOrleansReleaseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrleansReleaseResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansRequest, grain_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansRequest, grain_unique_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansRequest, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansRequest, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansResponse, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansResponse, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansReleaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansReleaseRequest, grain_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansReleaseRequest, grain_unique_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::orleans::core::OrleansReleaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::orleans::core::OrleansRequest)},
  { 9, -1, sizeof(::orleans::core::OrleansResponse)},
  { 16, -1, sizeof(::orleans::core::OrleansReleaseRequest)},
  { 23, -1, sizeof(::orleans::core::OrleansReleaseResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::orleans::core::_OrleansRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::orleans::core::_OrleansResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::orleans::core::_OrleansReleaseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::orleans::core::_OrleansReleaseResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "orleans_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025orleans_service.proto\022\014orleans.core\032\037g"
      "ayrpc/core/gayrpc_option.proto\032\035gayrpc/c"
      "ore/gayrpc_meta.proto\"q\n\016OrleansRequest\022"
      "\022\n\ngrain_type\030\001 \001(\t\022\031\n\021grain_unique_name"
      "\030\002 \001(\t\022\"\n\004meta\030\003 \001(\0132\024.gayrpc.core.RpcMe"
      "ta\022\014\n\004body\030\004 \001(\014\"C\n\017OrleansResponse\022\"\n\004m"
      "eta\030\001 \001(\0132\024.gayrpc.core.RpcMeta\022\014\n\004body\030"
      "\002 \001(\014\"F\n\025OrleansReleaseRequest\022\022\n\ngrain_"
      "type\030\001 \001(\t\022\031\n\021grain_unique_name\030\002 \001(\t\"\030\n"
      "\026OrleansReleaseResponse2\272\001\n\016OrleansServi"
      "ce\022L\n\007Request\022\034.orleans.core.OrleansRequ"
      "est\032\035.orleans.core.OrleansResponse\"\004\320\363\030\001"
      "\022Z\n\007Release\022#.orleans.core.OrleansReleas"
      "eRequest\032$.orleans.core.OrleansReleaseRe"
      "sponse\"\004\320\363\030\002P\000P\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 584);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "orleans_service.proto", &protobuf_RegisterTypes);
  ::protobuf_gayrpc_2fcore_2fgayrpc_5foption_2eproto::AddDescriptors();
  ::protobuf_gayrpc_2fcore_2fgayrpc_5fmeta_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_orleans_5fservice_2eproto
namespace orleans {
namespace core {

// ===================================================================

void OrleansRequest::InitAsDefaultInstance() {
  ::orleans::core::_OrleansRequest_default_instance_._instance.get_mutable()->meta_ = const_cast< ::gayrpc::core::RpcMeta*>(
      ::gayrpc::core::RpcMeta::internal_default_instance());
}
void OrleansRequest::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrleansRequest::kGrainTypeFieldNumber;
const int OrleansRequest::kGrainUniqueNameFieldNumber;
const int OrleansRequest::kMetaFieldNumber;
const int OrleansRequest::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrleansRequest::OrleansRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orleans.core.OrleansRequest)
}
OrleansRequest::OrleansRequest(const OrleansRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grain_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grain_type().size() > 0) {
    grain_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_type_);
  }
  grain_unique_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grain_unique_name().size() > 0) {
    grain_unique_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_unique_name_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_meta()) {
    meta_ = new ::gayrpc::core::RpcMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:orleans.core.OrleansRequest)
}

void OrleansRequest::SharedCtor() {
  grain_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meta_ = NULL;
  _cached_size_ = 0;
}

OrleansRequest::~OrleansRequest() {
  // @@protoc_insertion_point(destructor:orleans.core.OrleansRequest)
  SharedDtor();
}

void OrleansRequest::SharedDtor() {
  grain_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void OrleansRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrleansRequest::descriptor() {
  ::protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrleansRequest& OrleansRequest::default_instance() {
  ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansRequest();
  return *internal_default_instance();
}

OrleansRequest* OrleansRequest::New(::google::protobuf::Arena* arena) const {
  OrleansRequest* n = new OrleansRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrleansRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:orleans.core.OrleansRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grain_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  _internal_metadata_.Clear();
}

bool OrleansRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orleans.core.OrleansRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string grain_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grain_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grain_type().data(), static_cast<int>(this->grain_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "orleans.core.OrleansRequest.grain_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string grain_unique_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grain_unique_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "orleans.core.OrleansRequest.grain_unique_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gayrpc.core.RpcMeta meta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orleans.core.OrleansRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orleans.core.OrleansRequest)
  return false;
#undef DO_
}

void OrleansRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orleans.core.OrleansRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_type().data(), static_cast<int>(this->grain_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansRequest.grain_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->grain_type(), output);
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansRequest.grain_unique_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->grain_unique_name(), output);
  }

  // .gayrpc.core.RpcMeta meta = 3;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->meta_, output);
  }

  // bytes body = 4;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orleans.core.OrleansRequest)
}

::google::protobuf::uint8* OrleansRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orleans.core.OrleansRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_type().data(), static_cast<int>(this->grain_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansRequest.grain_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->grain_type(), target);
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansRequest.grain_unique_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->grain_unique_name(), target);
  }

  // .gayrpc.core.RpcMeta meta = 3;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->meta_, deterministic, target);
  }

  // bytes body = 4;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orleans.core.OrleansRequest)
  return target;
}

size_t OrleansRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orleans.core.OrleansRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grain_type());
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grain_unique_name());
  }

  // bytes body = 4;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // .gayrpc.core.RpcMeta meta = 3;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrleansRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orleans.core.OrleansRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OrleansRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrleansRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orleans.core.OrleansRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orleans.core.OrleansRequest)
    MergeFrom(*source);
  }
}

void OrleansRequest::MergeFrom(const OrleansRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orleans.core.OrleansRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grain_type().size() > 0) {

    grain_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_type_);
  }
  if (from.grain_unique_name().size() > 0) {

    grain_unique_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_unique_name_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_meta()) {
    mutable_meta()->::gayrpc::core::RpcMeta::MergeFrom(from.meta());
  }
}

void OrleansRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orleans.core.OrleansRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrleansRequest::CopyFrom(const OrleansRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orleans.core.OrleansRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrleansRequest::IsInitialized() const {
  return true;
}

void OrleansRequest::Swap(OrleansRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrleansRequest::InternalSwap(OrleansRequest* other) {
  using std::swap;
  grain_type_.Swap(&other->grain_type_);
  grain_unique_name_.Swap(&other->grain_unique_name_);
  body_.Swap(&other->body_);
  swap(meta_, other->meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrleansRequest::GetMetadata() const {
  protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrleansResponse::InitAsDefaultInstance() {
  ::orleans::core::_OrleansResponse_default_instance_._instance.get_mutable()->meta_ = const_cast< ::gayrpc::core::RpcMeta*>(
      ::gayrpc::core::RpcMeta::internal_default_instance());
}
void OrleansResponse::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrleansResponse::kMetaFieldNumber;
const int OrleansResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrleansResponse::OrleansResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orleans.core.OrleansResponse)
}
OrleansResponse::OrleansResponse(const OrleansResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_meta()) {
    meta_ = new ::gayrpc::core::RpcMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:orleans.core.OrleansResponse)
}

void OrleansResponse::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meta_ = NULL;
  _cached_size_ = 0;
}

OrleansResponse::~OrleansResponse() {
  // @@protoc_insertion_point(destructor:orleans.core.OrleansResponse)
  SharedDtor();
}

void OrleansResponse::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void OrleansResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrleansResponse::descriptor() {
  ::protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrleansResponse& OrleansResponse::default_instance() {
  ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansResponse();
  return *internal_default_instance();
}

OrleansResponse* OrleansResponse::New(::google::protobuf::Arena* arena) const {
  OrleansResponse* n = new OrleansResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrleansResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:orleans.core.OrleansResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  _internal_metadata_.Clear();
}

bool OrleansResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orleans.core.OrleansResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gayrpc.core.RpcMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orleans.core.OrleansResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orleans.core.OrleansResponse)
  return false;
#undef DO_
}

void OrleansResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orleans.core.OrleansResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gayrpc.core.RpcMeta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // bytes body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orleans.core.OrleansResponse)
}

::google::protobuf::uint8* OrleansResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orleans.core.OrleansResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gayrpc.core.RpcMeta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // bytes body = 2;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orleans.core.OrleansResponse)
  return target;
}

size_t OrleansResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orleans.core.OrleansResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  // .gayrpc.core.RpcMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrleansResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orleans.core.OrleansResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OrleansResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrleansResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orleans.core.OrleansResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orleans.core.OrleansResponse)
    MergeFrom(*source);
  }
}

void OrleansResponse::MergeFrom(const OrleansResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orleans.core.OrleansResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.has_meta()) {
    mutable_meta()->::gayrpc::core::RpcMeta::MergeFrom(from.meta());
  }
}

void OrleansResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orleans.core.OrleansResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrleansResponse::CopyFrom(const OrleansResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orleans.core.OrleansResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrleansResponse::IsInitialized() const {
  return true;
}

void OrleansResponse::Swap(OrleansResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrleansResponse::InternalSwap(OrleansResponse* other) {
  using std::swap;
  body_.Swap(&other->body_);
  swap(meta_, other->meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrleansResponse::GetMetadata() const {
  protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrleansReleaseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrleansReleaseRequest::kGrainTypeFieldNumber;
const int OrleansReleaseRequest::kGrainUniqueNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrleansReleaseRequest::OrleansReleaseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansReleaseRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orleans.core.OrleansReleaseRequest)
}
OrleansReleaseRequest::OrleansReleaseRequest(const OrleansReleaseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grain_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grain_type().size() > 0) {
    grain_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_type_);
  }
  grain_unique_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grain_unique_name().size() > 0) {
    grain_unique_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_unique_name_);
  }
  // @@protoc_insertion_point(copy_constructor:orleans.core.OrleansReleaseRequest)
}

void OrleansReleaseRequest::SharedCtor() {
  grain_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OrleansReleaseRequest::~OrleansReleaseRequest() {
  // @@protoc_insertion_point(destructor:orleans.core.OrleansReleaseRequest)
  SharedDtor();
}

void OrleansReleaseRequest::SharedDtor() {
  grain_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrleansReleaseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrleansReleaseRequest::descriptor() {
  ::protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrleansReleaseRequest& OrleansReleaseRequest::default_instance() {
  ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansReleaseRequest();
  return *internal_default_instance();
}

OrleansReleaseRequest* OrleansReleaseRequest::New(::google::protobuf::Arena* arena) const {
  OrleansReleaseRequest* n = new OrleansReleaseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrleansReleaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:orleans.core.OrleansReleaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grain_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grain_unique_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OrleansReleaseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orleans.core.OrleansReleaseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string grain_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grain_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grain_type().data(), static_cast<int>(this->grain_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "orleans.core.OrleansReleaseRequest.grain_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string grain_unique_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grain_unique_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "orleans.core.OrleansReleaseRequest.grain_unique_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orleans.core.OrleansReleaseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orleans.core.OrleansReleaseRequest)
  return false;
#undef DO_
}

void OrleansReleaseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orleans.core.OrleansReleaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_type().data(), static_cast<int>(this->grain_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansReleaseRequest.grain_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->grain_type(), output);
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansReleaseRequest.grain_unique_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->grain_unique_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orleans.core.OrleansReleaseRequest)
}

::google::protobuf::uint8* OrleansReleaseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orleans.core.OrleansReleaseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_type().data(), static_cast<int>(this->grain_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansReleaseRequest.grain_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->grain_type(), target);
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->grain_unique_name().data(), static_cast<int>(this->grain_unique_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "orleans.core.OrleansReleaseRequest.grain_unique_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->grain_unique_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orleans.core.OrleansReleaseRequest)
  return target;
}

size_t OrleansReleaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orleans.core.OrleansReleaseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string grain_type = 1;
  if (this->grain_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grain_type());
  }

  // string grain_unique_name = 2;
  if (this->grain_unique_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->grain_unique_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrleansReleaseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orleans.core.OrleansReleaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OrleansReleaseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrleansReleaseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orleans.core.OrleansReleaseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orleans.core.OrleansReleaseRequest)
    MergeFrom(*source);
  }
}

void OrleansReleaseRequest::MergeFrom(const OrleansReleaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orleans.core.OrleansReleaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grain_type().size() > 0) {

    grain_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_type_);
  }
  if (from.grain_unique_name().size() > 0) {

    grain_unique_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grain_unique_name_);
  }
}

void OrleansReleaseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orleans.core.OrleansReleaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrleansReleaseRequest::CopyFrom(const OrleansReleaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orleans.core.OrleansReleaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrleansReleaseRequest::IsInitialized() const {
  return true;
}

void OrleansReleaseRequest::Swap(OrleansReleaseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrleansReleaseRequest::InternalSwap(OrleansReleaseRequest* other) {
  using std::swap;
  grain_type_.Swap(&other->grain_type_);
  grain_unique_name_.Swap(&other->grain_unique_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrleansReleaseRequest::GetMetadata() const {
  protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrleansReleaseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrleansReleaseResponse::OrleansReleaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansReleaseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:orleans.core.OrleansReleaseResponse)
}
OrleansReleaseResponse::OrleansReleaseResponse(const OrleansReleaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:orleans.core.OrleansReleaseResponse)
}

void OrleansReleaseResponse::SharedCtor() {
  _cached_size_ = 0;
}

OrleansReleaseResponse::~OrleansReleaseResponse() {
  // @@protoc_insertion_point(destructor:orleans.core.OrleansReleaseResponse)
  SharedDtor();
}

void OrleansReleaseResponse::SharedDtor() {
}

void OrleansReleaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrleansReleaseResponse::descriptor() {
  ::protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrleansReleaseResponse& OrleansReleaseResponse::default_instance() {
  ::protobuf_orleans_5fservice_2eproto::InitDefaultsOrleansReleaseResponse();
  return *internal_default_instance();
}

OrleansReleaseResponse* OrleansReleaseResponse::New(::google::protobuf::Arena* arena) const {
  OrleansReleaseResponse* n = new OrleansReleaseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrleansReleaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:orleans.core.OrleansReleaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OrleansReleaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orleans.core.OrleansReleaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:orleans.core.OrleansReleaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orleans.core.OrleansReleaseResponse)
  return false;
#undef DO_
}

void OrleansReleaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orleans.core.OrleansReleaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:orleans.core.OrleansReleaseResponse)
}

::google::protobuf::uint8* OrleansReleaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orleans.core.OrleansReleaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orleans.core.OrleansReleaseResponse)
  return target;
}

size_t OrleansReleaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orleans.core.OrleansReleaseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrleansReleaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orleans.core.OrleansReleaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OrleansReleaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrleansReleaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orleans.core.OrleansReleaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orleans.core.OrleansReleaseResponse)
    MergeFrom(*source);
  }
}

void OrleansReleaseResponse::MergeFrom(const OrleansReleaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orleans.core.OrleansReleaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OrleansReleaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orleans.core.OrleansReleaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrleansReleaseResponse::CopyFrom(const OrleansReleaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orleans.core.OrleansReleaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrleansReleaseResponse::IsInitialized() const {
  return true;
}

void OrleansReleaseResponse::Swap(OrleansReleaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrleansReleaseResponse::InternalSwap(OrleansReleaseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrleansReleaseResponse::GetMetadata() const {
  protobuf_orleans_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_orleans_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace orleans

// @@protoc_insertion_point(global_scope)
